[{"path":"https://juditkisistok.github.io/ggAU/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 ggAU authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://juditkisistok.github.io/ggAU/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Judit Kisistok. Author, maintainer.","code":""},{"path":"https://juditkisistok.github.io/ggAU/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kisistok J (2022). ggAU: ggplot2 themes Aarhus University. R package version 0.0.0.9000.","code":"@Manual{,   title = {ggAU: ggplot2 themes for Aarhus University},   author = {Judit Kisistok},   year = {2022},   note = {R package version 0.0.0.9000}, }"},{"path":"https://juditkisistok.github.io/ggAU/index.html","id":"ggau---ggplot2-themes-for-aarhus-university","dir":"","previous_headings":"","what":"ggplot2 themes for Aarhus University","title":"ggplot2 themes for Aarhus University","text":"goal ggAU simplify process creating publication-ready visualizations follow Aarhus University color scheme.","code":""},{"path":"https://juditkisistok.github.io/ggAU/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"ggplot2 themes for Aarhus University","text":"can install development version ggAU GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"juditkisistok/ggAU\")"},{"path":"https://juditkisistok.github.io/ggAU/index.html","id":"available-color-palettes","dir":"","previous_headings":"","what":"Available color palettes","title":"ggplot2 themes for Aarhus University","text":"","code":"library(ggAU) unikn::seecol(au_color_palette(style = \"light\"), main = \"Light\",                grid = F, rgb = F) unikn::seecol(au_color_palette(style = \"dark\"), main = \"Dark\",                grid = F, rgb = F) unikn::seecol(au_color_palette(style = \"hotandcold\"), main = \"Hot and cold\",                grid = F, rgb = F) unikn::seecol(au_color_palette(style = \"hotandcold_dark\"), main = \"Hot and cold (dark)\",                grid = F, rgb = F)"},{"path":"https://juditkisistok.github.io/ggAU/index.html","id":"examples","dir":"","previous_headings":"","what":"Examples","title":"ggplot2 themes for Aarhus University","text":"scale_fill_au scale_color_au functions allow apply pre-defined color palettes. default color scheme light default variable type continuous. can add discrete = T categorical variable color schemes.  also possible define mix colors - can retrieve vector AU hex codes color name.  continuous fill scale works similar way, built-custom color schemes.  color aesthetic can changed similar way, using scale_color_au.","code":"iris_df = dplyr::summarize(dplyr::group_by(iris, Species),                             `Mean petal width` = mean(Petal.Width))  light_plot_fill = ggplot2::ggplot(iris_df, ggplot2::aes(x = Species,                                        y = `Mean petal width`, fill = Species)) +   ggplot2::geom_bar(stat = \"identity\") +   ggpubr::theme_pubr() +   scale_fill_au(discrete = T)  dark_plot_fill = ggplot2::ggplot(iris_df, ggplot2::aes(x = Species,                                       y = `Mean petal width`, fill = Species)) +   ggplot2::geom_bar(stat = \"identity\") +   ggpubr::theme_pubr() +   scale_fill_au(discrete = T, style = \"dark\")  cowplot::plot_grid(light_plot_fill, dark_plot_fill) my_custom_style = c(\"blue\", \"yellow\", \"red\")  ggplot2::ggplot(iris_df, ggplot2::aes(x = Species,                                        y = `Mean petal width`, fill = Species)) +   ggplot2::geom_bar(stat = \"identity\") +   ggpubr::theme_pubr() +   scale_fill_au(discrete = T, style = \"custom\", colors = my_custom_style) dummy_data = expand.grid(x = paste0(\"var_\", seq(1, 10)),                           y = paste0(\"var_\", seq(11, 20))) dummy_data$z = runif(100, -1, 1)  cont_fill_1 = ggplot2::ggplot(dummy_data, ggplot2::aes(x, y, fill = z)) +   ggplot2::geom_tile() +   ggpubr::theme_pubr() +   scale_fill_au(style = \"hotandcold\")  cont_fill_2 = ggplot2::ggplot(dummy_data, ggplot2::aes(x, y, fill= z)) +   ggplot2::geom_tile() +   ggpubr::theme_pubr() +   scale_fill_au(style = \"custom\", colors = c(\"yellow\", \"white\", \"darkblue\"))  cowplot::plot_grid(cont_fill_1, cont_fill_2) discrete_cols = ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Width, y = Petal.Length, color = Species)) +   ggplot2::geom_point(size = 5, alpha = 0.3) +   ggpubr::theme_pubr() +   scale_color_au(discrete = T) +   ggplot2::ggtitle(\"Built-in discrete color scale\") +   ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))  discrete_custom = ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Width, y = Petal.Length, color = Species)) +   ggplot2::geom_point(size = 5, alpha = 0.3) +   ggpubr::theme_pubr() +   scale_color_au(discrete = T, style = \"custom\", colors = c(\"yellow\", \"magenta\", \"darkblue\")) +   ggplot2::ggtitle(\"Custom discrete color scale\") +   ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))  cont_cols = ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Width, y = Petal.Length, color = Petal.Length)) +   ggplot2::geom_point(size = 5, alpha = 0.3) +   ggpubr::theme_pubr() +   scale_color_au(discrete = F, style = \"hotandcold\") +   ggplot2::ggtitle(\"Built-in continuous color scale\") +   ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))  cont_custom = ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Width, y = Petal.Length, color = Petal.Length)) +   ggplot2::geom_point(size = 5, alpha = 0.3) +   ggpubr::theme_pubr() +   scale_color_au(discrete = F, style = \"custom\", colors = c(\"darkblue\", \"yellow\", \"magenta\")) +   ggplot2::ggtitle(\"Custom continuous color scale\") +   ggplot2::theme(plot.title = ggplot2::element_text(hjust = 0.5))  cowplot::plot_grid(discrete_cols, discrete_custom, cont_cols, cont_custom)"},{"path":"https://juditkisistok.github.io/ggAU/index.html","id":"built-in-plots","dir":"","previous_headings":"","what":"Built-in plots","title":"ggplot2 themes for Aarhus University","text":"Additionally color schemes, ggAU also includes commonly used visualization types pre-applied AU styles.","code":""},{"path":"https://juditkisistok.github.io/ggAU/index.html","id":"violinplotter","dir":"","previous_headings":"","what":"Violinplotter","title":"ggplot2 themes for Aarhus University","text":"function many customization options, however, specifying data, x_val y_val enough getting basic plot running.","code":"minimal = violinplotter(data = iris, x_val =  \"Species\", y_val = \"Petal.Width\",                         title = \"Minimal example\")  minimal_filtered = violinplotter(data = iris, x_val =  \"Species\", y_val = \"Petal.Width\",                                  filter = T, filter_col = \"Species\", filter_val = c(\"setosa\", \"virginica\"),                                  title = \"Minimal filtered example\")  full_custom = violinplotter(data = iris, x_val =  \"Species\", y_val = \"Petal.Width\",                              x_lab = \"Species\", y_lab = \"Petal width\",                              title = \"Fully customized example\",                             filter = F, filter_col = NA, filter_val = NA,                             comp_vec = list(c(\"setosa\", \"virginica\"),                                              c(\"setosa\", \"versicolor\"),                                              c(\"virginica\", \"versicolor\")),                             col_style = \"custom\",  fill_style = \"custom\",                              col_vec = c(\"red\", \"blue\", \"green\"),                              fill_vec = c(\"red\", \"blue\", \"green\"),                             display_n = F)  cowplot::plot_grid(minimal, minimal_filtered, full_custom, nrow = 1)"},{"path":"https://juditkisistok.github.io/ggAU/index.html","id":"barplotter","dir":"","previous_headings":"","what":"Barplotter","title":"ggplot2 themes for Aarhus University","text":"function creates bar plot displays Fisher’s test p-value subtitle. Similarly violinplotter, many customization options available, specifying data, x_lab y_lab sufficient creating basic plot.","code":"# modifying the iris data to include two categorical variables iris = iris %>%   dplyr::mutate(Petal_mean = ifelse(Petal.Length > mean(Petal.Length), \"above_mean\", \"below_mean\"))  minimal_barplot = barplotter(data = iris, x_val = \"Species\", y_val = \"Petal_mean\",                              labcol = \"white\")  full_custom_barplot = barplotter(data = iris, x_val = \"Species\", y_val = \"Petal_mean\",                                  order = c(\"virginica\", \"setosa\", \"versicolor\"),                                  scale_labs = c(\"Virginica\", \"Setosa\", \"Versicolor\"),                                  pct = FALSE, style = \"custom\", colors = c(\"darkblue\", \"magenta\"),                                  y_lab = \"Number of individuals\", x_lab = \"\",                                  title = \"Comparing the petal lengths of different species\",                                  labcol = \"white\", legend_lab = \"Petal length category\",                                  labels = c(\"Above mean\", \"Below mean\")                                  )  cowplot::plot_grid(minimal_barplot, full_custom_barplot)"},{"path":"https://juditkisistok.github.io/ggAU/reference/au_color_palette.html","id":null,"dir":"Reference","previous_headings":"","what":"Color palette generator — au_color_palette","title":"Color palette generator — au_color_palette","text":"Helper function generate branded color palettes.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/au_color_palette.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Color palette generator — au_color_palette","text":"","code":"au_color_palette(style = \"light\", reverse = FALSE, colors = NA)"},{"path":"https://juditkisistok.github.io/ggAU/reference/au_color_palette.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Color palette generator — au_color_palette","text":"style String, name pre-defined color palette (light, dark, hotandcold, hotandcold_dark), custom. default palette light. reverse Boolean, TRUE reverse color order. colors Vector AU color names. used style = \"custom\" passed .","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/au_color_palette.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Color palette generator — au_color_palette","text":"named vector pre-defined custom color palette.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/au_color_palette.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Color palette generator — au_color_palette","text":"","code":"au_color_palette(\"hotandcold\") #>      blue     white       red  #> \"#003d73\" \"#ffffff\" \"#e2001a\"   au_color_palette(\"custom\", colors = c(\"yellow\", \"magenta\", \"white\")) #>    yellow   magenta     white  #> \"#fabb00\" \"#e2007a\" \"#ffffff\""},{"path":"https://juditkisistok.github.io/ggAU/reference/au_colors.html","id":null,"dir":"Reference","previous_headings":"","what":"Aarhus University brand colors — au_colors","title":"Aarhus University brand colors — au_colors","text":"Helper function retrieve arbitrary number AU brand colors name. Returns named vector containing color name(s) passed function, corresponding AU hex code(s).","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/au_colors.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Aarhus University brand colors — au_colors","text":"","code":"au_colors(...)"},{"path":"https://juditkisistok.github.io/ggAU/reference/au_colors.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Aarhus University brand colors — au_colors","text":"... Name(s) color(s) used. Valid color names: blue, darkblue, purple, darkpurple, cyan, darkcyan, turkis, darkturkis, green, darkgreen, yellow, darkyellow, orange, darkorange, red, darkred, magenta, darkmagenta, grey, darkgrey, white.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/au_colors.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Aarhus University brand colors — au_colors","text":"named vector chosen colors corresponding hex codes.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/au_colors.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Aarhus University brand colors — au_colors","text":"Implementation based official brand guidelines.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/au_colors.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Aarhus University brand colors — au_colors","text":"","code":"au_colors(\"red\", \"blue\") #>       red      blue  #> \"#e2001a\" \"#003d73\""},{"path":"https://juditkisistok.github.io/ggAU/reference/barplotter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create barplots — barplotter","title":"Create barplots — barplotter","text":"Enables creation barplots convenient customizable manner, calculates associated Fisher's test p-value count data.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/barplotter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create barplots — barplotter","text":"","code":"barplotter(   data,   x_val,   y_val,   order = NA,   scale_labs = NA,   pct = T,   style = \"light\",   colors = au_colors(),   y_lab = \"y\",   x_lab = \"x\",   title = \"\",   labcol = \"black\",   legend_lab = NA,   labels = NA )"},{"path":"https://juditkisistok.github.io/ggAU/reference/barplotter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create barplots — barplotter","text":"data data.frame used visualization. x_val string, name column plot x axis. y_val string, name column plot y axis. order vector, order bars appear. include unique values x_val desired order. scale_labs vector, names display x axis ticks. default, shows names appear x_val. pct boolean, TRUE, percentages displayed bars, FALSE, absolute numbers shown. style string, palette style used scale_fill_au. Default light. colors vector containing colors used fill aesthetic. Default au_colors(). Custom colors applied fill_style = \"custom\". y_lab string, y axis label. x_lab string, x axis label. title string, title plot displayed top. labcol string, color annotation numbers displayed inside bars. default black. legend_lab string, legend title. Default y. labels vector, legend annotations. Default unique values y_val.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/barplotter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create barplots — barplotter","text":"ggplot object.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/barplotter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create barplots — barplotter","text":"","code":"iris = dplyr::mutate(iris, Petal_mean = ifelse(Petal.Length > mean(Petal.Length), \"above_mean\", \"below_mean\"))  barplotter(data = iris, x_val = \"Species\", y_val = \"Petal_mean\", labcol = \"white\")"},{"path":"https://juditkisistok.github.io/ggAU/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator — %>%","title":"Pipe operator — %>%","text":"See magrittr::%>% details.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator — %>%","text":"","code":"lhs %>% rhs"},{"path":"https://juditkisistok.github.io/ggAU/reference/pipe.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pipe operator — %>%","text":"lhs value magrittr placeholder. rhs function call using magrittr semantics.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/pipe.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pipe operator — %>%","text":"result calling rhs(lhs).","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/scale_color_au.html","id":null,"dir":"Reference","previous_headings":"","what":"AU color scale — scale_color_au","title":"AU color scale — scale_color_au","text":"Enables customization color aesthetic using pre-defined custom AU color palettes.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/scale_color_au.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AU color scale — scale_color_au","text":"","code":"scale_color_au(   style = \"light\",   reverse = FALSE,   discrete = FALSE,   colors = NA,   na.value = au_colors(\"grey\"),   ... )"},{"path":"https://juditkisistok.github.io/ggAU/reference/scale_color_au.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AU color scale — scale_color_au","text":"style String, color palette style. light, dark, hotandcold, hotandcold_dark, custom. Default palette light. reverse Boolean, TRUE reverses color order. discrete Boolean, TRUE applies discrete color scale, FALSE applies continuous color scale. Default FALSE. colors Vector AU color names. used style = \"custom\" passed . na.value String named vector, color use NA values. Default au_colors(\"grey\"), corresponding #878787. ... Arguments passed scale_color_manual scale_color_gradientn.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/scale_color_au.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AU color scale — scale_color_au","text":"ggproto ScaleContinuous ScaleDiscrete object.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/scale_color_au.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AU color scale — scale_color_au","text":"","code":"ggplot2::ggplot(iris, ggplot2::aes(x = Petal.Width, y = Petal.Length, color = Species)) + ggplot2::geom_point(size = 5, alpha = 0.3) + ggpubr::theme_pubr() + scale_color_au(discrete = T)"},{"path":"https://juditkisistok.github.io/ggAU/reference/scale_fill_au.html","id":null,"dir":"Reference","previous_headings":"","what":"AU fill scale — scale_fill_au","title":"AU fill scale — scale_fill_au","text":"Enables customization fill aesthetic using pre-defined custom AU color palettes.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/scale_fill_au.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"AU fill scale — scale_fill_au","text":"","code":"scale_fill_au(   style = \"light\",   reverse = FALSE,   discrete = FALSE,   colors = NA,   na.value = au_colors(\"grey\"),   ... )"},{"path":"https://juditkisistok.github.io/ggAU/reference/scale_fill_au.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"AU fill scale — scale_fill_au","text":"style String, color palette style. light, dark, hotandcold, hotandcold_dark, custom. Default palette light. reverse Boolean, TRUE reverses color order. discrete Boolean, TRUE applies discrete color scale, FALSE applies continuous color scale. Default FALSE. colors Vector AU color names. used style = \"custom\" passed . na.value String named vector, color use NA values. Default au_colors(\"grey\"), corresponding #878787. ... Arguments passed scale_fill_manual scale_fill_gradientn.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/scale_fill_au.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"AU fill scale — scale_fill_au","text":"ggproto ScaleContinuous ScaleDiscrete object.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/scale_fill_au.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"AU fill scale — scale_fill_au","text":"","code":"iris_df = dplyr::summarize(dplyr::group_by(iris, Species), `Mean petal width` = mean(Petal.Width))  ggplot2::ggplot(iris_df, ggplot2::aes(x = Species, y = `Mean petal width`, fill = Species)) + ggplot2::geom_bar(stat = \"identity\") + ggpubr::theme_pubr() + scale_fill_au(discrete = T, style = \"light\")"},{"path":"https://juditkisistok.github.io/ggAU/reference/violinplotter.html","id":null,"dir":"Reference","previous_headings":"","what":"Create violin-boxplots — violinplotter","title":"Create violin-boxplots — violinplotter","text":"Enables creation violin-boxplots convenient customizable manner.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/violinplotter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create violin-boxplots — violinplotter","text":"","code":"violinplotter(   data,   x_val,   y_val,   x_lab = \"x\",   y_lab = \"y\",   title = \"\",   filter = F,   filter_col = NA,   filter_val = NA,   comp_vec = NA,   col_vec = au_colors(),   fill_vec = au_colors(),   col_style = \"light\",   fill_style = \"light\",   display_n = T )"},{"path":"https://juditkisistok.github.io/ggAU/reference/violinplotter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create violin-boxplots — violinplotter","text":"data data.frame used visualization. x_val string, name column plot x axis. y_val string, name column plot y axis. x_lab string, x axis label. y_lab string, y axis label. title string, title plot displayed top. filter boolean, TRUE, allows filtering data. Default FALSE. filter_col string, name column filter filter = TRUE. filter_val vector, values keep filter = TRUE. comp_vec list vectors containing comparisons passed stat_compare_means. Default NA, case, comparisons made. col_vec vector containing colors used color aesthetic. Default au_colors(). Custom colors applied col_style = \"custom\". fill_vec vector containing colors used fill aesthetic. Default au_colors(). #' Custom colors applied fill_style = \"custom\". col_style string, palette style used scale_color_au. Default light. fill_style string, palette style used scale_fill_au. Default light. display_n boolean, TRUE, plot displays sample size appended title. Default TRUE.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/violinplotter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create violin-boxplots — violinplotter","text":"ggplot object.","code":""},{"path":"https://juditkisistok.github.io/ggAU/reference/violinplotter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create violin-boxplots — violinplotter","text":"","code":"violinplotter(data = iris, x_val =  \"Species\", y_val = \"Petal.Width\", display_n = F)   violinplotter(data = iris, x_val =  \"Species\", y_val = \"Petal.Width\", filter = T, filter_col = \"Species\", filter_val = c(\"setosa\", \"virginica\"), comp_vec = list(c(\"setosa\", \"virginica\")), title = \"Comparing Setosa and Virginica\")"}]
